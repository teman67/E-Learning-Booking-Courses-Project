# .github/workflows/keep-supabase-alive.yml
name: Keep Course Booking Database Active

on:
  schedule:
    # Run every 5 days at different times to avoid patterns
    - cron: '0 12 */5 * *'  # Every 5 days at 12 PM UTC
    - cron: '30 18 */5 * *'  # Every 5 days at 6:30 PM UTC (offset)
  workflow_dispatch: # Allow manual triggering

jobs:
  ping-database:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Wait for random delay
      run: |
        # Add random delay to avoid predictable patterns
        delay=$((RANDOM % 180 + 30))  # Random delay between 30 seconds - 3 minutes
        echo "⏳ Waiting $delay seconds before ping to randomize timing..."
        sleep $delay
    
    - name: Ping Health Check Endpoint (Read Operation)
      run: |
        echo "🔍 Testing database read operations..."
        
        # Try the health endpoint with retry logic (GET request)
        for i in {1..3}; do
          response=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 "${{ secrets.APP_URL }}/health/")
          
          if [ $response -eq 200 ]; then
            echo "✅ Database read check successful on attempt $i (HTTP $response)"
            break
          else
            echo "⚠️ Database read check failed on attempt $i (HTTP $response)"
            if [ $i -eq 3 ]; then
              echo "❌ All read check attempts failed"
              exit 1
            fi
            sleep 15
          fi
        done
    
    - name: Ping Health Check Endpoint (Write Operation)
      run: |
        echo "✍️ Testing database write operations..."
        
        # Try the health endpoint with POST to test write operations
        for i in {1..2}; do
          response=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 -X POST "${{ secrets.APP_URL }}/health/")
          
          if [ $response -eq 200 ]; then
            echo "✅ Database write check successful on attempt $i (HTTP $response)"
            break
          else
            echo "⚠️ Database write check failed on attempt $i (HTTP $response)"
            if [ $i -eq 2 ]; then
              echo "⚠️ Write operations failed, but database is still active from read operations"
            fi
            sleep 10
          fi
        done
    
    - name: Test Main Application Endpoint
      run: |
        echo "🏠 Testing main application accessibility..."
        response=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 "${{ secrets.APP_URL }}/")
        
        if [ $response -eq 200 ] || [ $response -eq 302 ]; then
          echo "✅ Main application accessible (HTTP $response)"
        else
          echo "⚠️ Main application response: HTTP $response"
        fi
    
    - name: Log Activity Summary
      run: |
        echo "📊 === Course Booking System Keep-Alive Summary ==="
        echo "🎯 Database activity completed at $(date -u)"
        echo "🔄 Next automated ping scheduled in ~5 days"
        echo "💾 Supabase database should remain active"
        echo "📚 Course booking system health check complete"
        echo "=================================================="
